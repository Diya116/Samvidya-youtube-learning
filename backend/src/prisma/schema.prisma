generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  courses   Course[]
}
model Course {
  id          String   @id @default(cuid())
  title       String
  description String?
  coverImg    String?
  userId      Int
  lessons     Lesson[]
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Lesson {
  id          String   @id @default(cuid())
  title       String
  description String?
  url         String
  thumbnail   String?
  duration    String
  courseId    String
  course      Course   @relation(fields: [courseId], references: [id])
  notes       Note[]
  UserLessonProgress UserLessonProgress
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Note {
  id       String  @id @default(cuid())
  lessonId String
  lesson   Lesson  @relation(fields: [lessonId], references: [id])
}

model UserCourseProgress {
  id            String   @id @default(cuid())
  userId        Int
  courseId      String
  completedLessons Int     @default(0)
  status        CourseStatus @default(NOT_STARTED)
  updatedAt     DateTime @updatedAt
  createdAt     DateTime @default(now())
  course        Course?   @relation(fields: [courseId], references: [id])
}
enum CourseStatus {
  NOT_STARTED
  IN_PROGRESS
  COMPLETED
}
model UserLessonProgress {
  id         String   @id @default(cuid())
  userId     Int
  lessonId   String
  completed  Boolean  @default(false)
  completedAt DateTime?
  lesson     Lesson   @relation(fields: [lessonId], references: [id])
}
